SLAVE:

// Install distcc
sudo apt-get install distcc

// Find adresses
// Look for IPv4 Settings:
// Address: Computer's internal address
// Prefix: CIDR prefix (i.e. if internal address is 192.168.1.x, then CIDR address for 192.168.1.0 - 192.168.1.255 is 192.168.1.0/24), where 24 is the prefix. Or something like that
nm-tool

// Configure slave
sudo emacs -nw /etc/default/distcc
// ->
STARTDISTCC="true"
ALLOWEDNETS="192.168.1.0/24" // Or whatever the CIDR address of the network is
LISTENER="0.0.0.0"
NICE="10"

// Start slave
/etc/init.d/distccd start
// and/or (haven't really gotten the hang of this part)
distccd --daemon -a xxx.xx.xx.xx --log-file ~/distccd.log // Where the x:es is the IP address of the master


MASTER:
// Add address of slaves to configuration
sudo emacs -nw /etc/distcc/hosts
// ->
localhost/x 192.168.1.Y/y // Where x and y are the number of cores, and Y is the internal IP of the slave. More can be added with spaces.

// To make gcc, g++, etc. automatically call distcc, do:
sudo mkdir /usr/lib/distcc/bin
cd /usr/lib/distcc/bin
sudo ln -s ../../../bin/distcc gcc
sudo ln -s ../../../bin/distcc cc
sudo ln -s ../../../bin/distcc g++
sudo ln -s ../../../bin/distcc c++
// And add the directory to the beginning of path:
PATH=/usr/lib/distcc/bin:$PATH


// Start the compiling, z is the total number of cores to be used, distributed over all the slaves. Can look different depending on what kind of compilation software is used
distcc make -jz
CC="distcc gcc" CXX="distcc g++" cmake .



TROUBLESHOOTING:
// Kill running processes (if it complains about addresses being busy)
// (dcc_listen_by_addr) ERROR: bind of 0.0.0.0:3632 failed: Address already in use 
/etc/init.d/distcc stop
sudo killall distccd
